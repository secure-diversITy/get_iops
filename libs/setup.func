# ask generic stuff
F_SETUP(){
    TYPE="$1"
    export RUNID=$(date +%Y%m%d-%H%M%S)
    export CSV="$RESULTPATH/${TYPE}_${RUNID}.csv"

    clear
    echo -e "\nSetting up $TYPE:\n"
    
    [ -z "$IOPROC" ] && read -p "ALL DISK OPERATION TASKS are stopped (I do not verify ! so you could lie on your own risk ... ) ? [y|n] > " IOPROC
    [ "x$IOPROC" != "xy" ] && echo -e "\n\tABORTED. Please stop all disk I/O related tasks first!\n" && exit
    DETRAM=$(F_GETMEM)
    [ -z "$RAM" ] && read -p "Your amount of RAM in Megabyte (press ENTER to choose the detected RAM: $DETRAM MB)" RAM
    [ -z "$RAM" -o "$RAM" == "auto" ] && RAM=$DETRAM
    [ -z "$STORAGE" ] && read -p "The mountpoint/path you want to test > " STORAGE

    if [ $TYPE == "bonnie++" ];then
        [ -z "$TESTS" ] && read -p "How many test runs? (leave empty for default: $BONTESTRUNSDEF) > " TESTS
        [ -z "$NFILES" ] && read -p "Number of files getting written (leave empty for default: '$BONFILESNODEF') > " NFILES
        [ -z "$NDIRS" ] && read -p "Number of directories (leave empty for default: '$BONDIRSNODEF') > " NDIRS
    elif [ $TYPE == "iozone" ];then
        [ -z "$TESTS" ] && read -p "Which tests to run (leave empty for default: '$IOZTESTSDEF') > " TESTS
        [ -z "$RSIZES" ] && read -p "Record sizes (leave empty for default: '$IOZRSIZESDEF') > " RSIZES
        DETCPUCOUNT=$(F_GETCPUS)
        echo -e "\nDetected CPU count: $DETCPUCOUNT"
        [ -z "$CPUCOUNT" ] && read -p "How many CPUs do you want to use (leave empty for default: '$IOZCPUCNTDEF') > " CPUCOUNT
    elif [ $TYPE == "fio" ];then
        [ -z "$BLKSIZE" ] && read -p "Block size (leave empty for default: '$FIOBLKSIZEDEF') > " BLKSIZE
        DETCPUCOUNT=$(F_GETCPUS)
        echo -e "\nDetected CPU count: $DETCPUCOUNT"
        [ -z "$CPUCOUNT" ] && read -p "How many Jobs do you want to use (leave empty for default: '$FIOJOBCNTDEF') > " CPUCOUNT
    fi

    BSIZE=$(($RAM * 3))
    [ "x$BATCH" == "x0" ]&&echo -e "\n\tCalculated file size is: $BSIZE MB ($RAM * 3 to trick cache)"
    [ "x$BATCH" == "x0" ]&&echo -e "\tTake a cup of coffee - or two. This will take a while!!!\n\tBest practice is: Start 'iostat 1' and watching the 'tps' column while this is running..\n"
    
    # test write access before we start
    if [ ! -d "$STORAGE" ];then
        echo -e "\n\tABORTED! Path: >$STORAGE< does not exist!?\n"
        exit 3
    else
        sudo -u $RUNUSER touch $STORAGE/${TYPE}.testfile >> /dev/null 2>&1
        if [ $? -eq 0 ];then
            echo -e "OK: storage exists and is writable to me."
            $BINARGS rm $STORAGE/${TYPE}.testfile
        else
            echo -e "\nABORTED! Path: >$STORAGE< is not writable for user: >${RUNUSER}<!\n"
            exit 3
        fi
        $BINARGS touch $CSV >> /dev/null 2>&1
        if [ $? -eq 0 ];then
            echo -e "OK: result CSV path is writable to me."
            $BINARGS rm $CSV
        else
            echo -e "\nABORTED! Path or file: >$CSV< is not writable for user: >${RUNUSER}<!\n"
            exit 3
        fi
    fi

}
